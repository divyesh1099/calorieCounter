# Generated by Django 4.2.4 on 2023-10-30 21:17

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FoodItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Food Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('serving_size', models.FloatField(help_text='Serving size in grams')),
                ('calories', models.FloatField(help_text='Calories per serving (kcal)')),
                ('protein', models.FloatField(help_text='Protein content per serving (g)')),
                ('total_carbohydrates', models.FloatField(help_text='Total Carbohydrates content per serving (g)')),
                ('total_fats', models.FloatField(help_text='Total Fats content per serving (g)')),
                ('dietary_fiber', models.FloatField(blank=True, help_text='Dietary fiber content per serving (g)', null=True)),
                ('sugars', models.FloatField(blank=True, help_text='Sugars content per serving (g)', null=True)),
                ('starch', models.FloatField(blank=True, help_text='Starch content per serving (g)', null=True)),
                ('saturated_fats', models.FloatField(blank=True, help_text='Saturated Fats content per serving (g)', null=True)),
                ('trans_fats', models.FloatField(blank=True, help_text='Trans Fats content per serving (g)', null=True)),
                ('monounsaturated_fats', models.FloatField(blank=True, help_text='Monounsaturated Fats content per serving (g)', null=True)),
                ('polyunsaturated_fats', models.FloatField(blank=True, help_text='Polyunsaturated Fats content per serving (g)', null=True)),
                ('cholesterol', models.FloatField(blank=True, help_text='Cholesterol content per serving (mg)', null=True)),
                ('sodium', models.FloatField(blank=True, help_text='Sodium content per serving (mg)', null=True)),
                ('potassium', models.FloatField(blank=True, help_text='Potassium content per serving (mg)', null=True)),
                ('vitamin_c', models.FloatField(blank=True, help_text='Vitamin C content per serving (mg)', null=True)),
                ('iron', models.FloatField(blank=True, help_text='Iron content per serving (mg)', null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True, verbose_name='Date Added')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Last Updated')),
                ('image', models.ImageField(blank=True, null=True, upload_to='food_items/', verbose_name='Food Image')),
            ],
            options={
                'verbose_name': 'Food Item',
                'verbose_name_plural': 'Food Items',
                'ordering': ['name'],
            },
        ),
    ]
